<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <system:Double x:Key="DataGridDefaultCellHeight">30</system:Double>

    <Style TargetType="{x:Type DataGrid}">
        <Style.Resources>
            <Style TargetType="Button" x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}">
                <Setter Property="Background" Value="{DynamicResource DataGridBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource DataGridLineBrush}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{DynamicResource DataGridColumnHeaderBorderBrush}" BorderThickness="0,0,0,2">
                                <Rectangle HorizontalAlignment="Right" Width="1" Fill="{TemplateBinding BorderBrush}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource DataGridLineBrush}" />
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource DataGridLineBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="RowHeaderWidth" Value="0" />
        <Setter Property="Background" Value="{DynamicResource DataGridBackgroundBrush}" />
    </Style>

    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="4"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="{StaticResource DataGridDefaultCellHeight}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="SeparatorBrush" Value="{DynamicResource DataGridLineBrush}" />
        <Setter Property="Padding" Value="6,0" />
        <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
        <Setter Property="Background" Value="{DynamicResource DataGridBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource DataGridColumnHeaderBorderBrush}" />
        <Setter Property="BorderThickness" Value="0,0,0,2" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="BackgroundBorder" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Grid.ColumnSpan="2" />

                        <ContentPresenter Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>

                        <Border x:Name="VerticalSeparator" 
                                BorderBrush="Transparent" 
                                HorizontalAlignment="Right" 
                                BorderThickness="0"
                                Grid.ColumnSpan="2" 
                                Visibility="{TemplateBinding SeparatorVisibility}" />

                        <Path x:Name="SortArrow" 
                              Visibility="Hidden" 
                              Data="M13,20H11V8L5.5,13.5L4.08,12.08L12,4.16L19.92,12.08L18.5,13.5L13,8V20Z" 
                              Stretch="Uniform" 
                              Grid.Column="1" 
                              Height="10" 
                              Fill="{TemplateBinding Foreground}" 
                              Margin="0,0,8,0" 
                              VerticalAlignment="Center" 
                              RenderTransformOrigin="0.5,0.5" />

                        <!--Separator-->
                        <Rectangle Width="1" Margin="0,0,0,0" Fill="{TemplateBinding SeparatorBrush}" HorizontalAlignment="Right" Grid.Column="1" />

                        <!--Resize grip-->
                        <Thumb x:Name="PART_LeftHeaderGripper" Grid.ColumnSpan="2" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_RightHeaderGripper" Grid.ColumnSpan="2" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource BackgroundHoverBrush}" />
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource BackgroundHoverBrush}" />
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="DisplayIndex" Value="0">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_LeftHeaderGripper"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource ForegroundDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
        <Setter Property="Background" Value="{DynamicResource DataGridBackgroundBrush}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SeparatorBrush" Value="{DynamicResource DataGridLineBrush}" />
        <Setter Property="SeparatorVisibility" Value="Visible"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridRowHeader">
                    <Grid Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Fill).Color" Duration="0" To="{DynamicResource DataGridBackgroundHoverBrushColor}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal_Selected">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Fill).Color" Duration="0" To="{DynamicResource AccentColor}"/>
                                        <ColorAnimation Duration="0" 
                                                        To="{DynamicResource SelectedItemForegroundColor}" 
                                                        Storyboard.TargetName="ContentElement" 
                                                        Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal_CurrentRow_Selected">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Fill).Color" Duration="0" To="{DynamicResource AccentColor}"/>
                                        <ColorAnimation Duration="0" 
                                                        To="{DynamicResource SelectedItemForegroundColor}" 
                                                        Storyboard.TargetName="ContentElement" 
                                                        Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver_CurrentRow_Selected">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Fill).Color" Duration="0" 
                                                        To="{DynamicResource AccentColor}"/>
                                        <ColorAnimation Duration="0"
                                                        To="{DynamicResource SelectedItemForegroundColor}" 
                                                        Storyboard.TargetName="ContentElement" 
                                                        Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver_Unfocused_Selected">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Fill).Color" Duration="0" To="{DynamicResource AccentColor}"/>
                                        <ColorAnimation Duration="0"
                                                        To="{DynamicResource SelectedItemForegroundColor}"
                                                        Storyboard.TargetName="ContentElement" 
                                                        Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused_Selected">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Fill).Color" Duration="0" To="{DynamicResource AccentColor}"/>
                                        <ColorAnimation Duration="0"
                                                        To="{DynamicResource SelectedItemForegroundColor}"
                                                        Storyboard.TargetName="ContentElement" 
                                                        Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Border BorderBrush="{TemplateBinding SeparatorBrush}" BorderThickness="0,0,1,0" Grid.RowSpan="3" Grid.ColumnSpan="2">
                            <Grid Background="{TemplateBinding Background}">
                                <Rectangle x:Name="BackgroundRectangle" Stretch="Fill" Grid.RowSpan="3" Grid.ColumnSpan="2" Fill="Transparent" />
                            </Grid>
                        </Border>
                        <Rectangle Name="HorizontalSeparator" Grid.ColumnSpan="2" Grid.Row="2" Height="1" Margin="1,0,1,0" HorizontalAlignment="Stretch" Fill="{TemplateBinding SeparatorBrush}" Visibility="{TemplateBinding SeparatorVisibility}" />

                        <ContentPresenter x:Name="ContentElement" Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="1" Grid.RowSpan="2" />

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Row -->
    <Style TargetType="{x:Type DataGridRow}">
        <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
        <Setter Property="Background" Value="{DynamicResource DataGridBackgroundBrush}" />
        <Setter Property="MinHeight" Value="{StaticResource DataGridDefaultCellHeight}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridBackgroundHoverBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="IsEnabled" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource Accent}" />
                <Setter Property="Control.Foreground" Value="{DynamicResource SelectedItemForeground}" />
                <Setter Property="Foreground" Value="{DynamicResource SelectedItemForeground}" />
                <Setter Property="BorderThickness" Value="0" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!-- Cell -->
    <Style TargetType="DataGridCell" x:Key="DefaultCellStyle">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="4,0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ToolTip" Value="{Binding Column.(ToolTipService.ToolTip), RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Name="Root" 
                            Background="{TemplateBinding Background}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="IsEnabled" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource Accent}"/>
                <Setter Property="Foreground" Value="{DynamicResource SelectedItemForeground}" />
            </MultiTrigger>
            <Trigger Property="IsEditing" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridBackgroundBrush}"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="{DynamicResource Accent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DefaultCellStyle}" />

    <!-- Content style / Right alignment -->
    <Style TargetType="{x:Type DataGridCell}" x:Key="AlignRight" BasedOn="{StaticResource DefaultCellStyle}">
        <Setter Property="Label.HorizontalContentAlignment" Value="Right" />
    </Style>
    
    <!-- Content style / Center alignment -->
    <Style TargetType="{x:Type DataGridCell}" x:Key="AlignCenter" BasedOn="{StaticResource DefaultCellStyle}">
        <Setter Property="Label.HorizontalContentAlignment" Value="Center" />
    </Style>

</ResourceDictionary>